<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet 
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
  xmlns:xs="http://www.w3.org/2001/XMLSchema" 
  xmlns:opentopic="http://www.idiominc.com/opentopic"
  exclude-result-prefixes="xs opentopic" version="2.0">

 <xsl:key name="ids_in_content"   match="*[not(ancestor-or-self::opentopic:map)]"   use="@id"/>
    
    

  <!-- 
        The merged DITA map file may contain cross references to elements from a topic. In this case, the reference looks like:
        
        <xref class="- topic/xref " 
            href="#unique_3/unique_3_Connect_42_my_table_id" 
            ohref="topics/care.dita#care/my_table_id"/>
            
        Where the "ohref" is the original value from the DITA source, and the "href" is generated by the merging process.
        The value of the href cannot be used by the XML+CSS to PDF processor, because it is not a valid IDREF (contains a / )
        so wee need to remove the part before the slash.
        
        Check out the @href attributes. If their value points to a non existing ID from the document, 
        an additional "broken-link" attribute is generated. 
    -->
  <xsl:template match="@href">
    <!-- Compute the target of the link. -->
    <xsl:choose>
    
      <xsl:when test="starts-with( ., '#')">
        <xsl:choose>
          <xsl:when test="contains(., '/')">
            <!-- Internal link. -->
            <xsl:call-template name="generate-href-for-internal-link">
              <xsl:with-param name="target" select="substring-after(., '/')" />
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
             <!-- Internal link. -->
            <xsl:call-template name="generate-href-for-internal-link">
              <xsl:with-param name="target" select="substring-after(., '#')" />
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>        
      </xsl:when>
      <xsl:otherwise>
        <!-- Web Link -->
        <xsl:attribute name="href" select="." />

      </xsl:otherwise>
    </xsl:choose>


  </xsl:template>

  <!-- 
    Generates the @href attribute. Checks if the link target exists. 
    If the target is not found in the document, the link is marked as broken.
  
    @param The ID of the target element.
   -->
  <xsl:template name="generate-href-for-internal-link">
    <xsl:param name="target" />

    <xsl:attribute name="href" select="concat('#',$target)" />
    <xsl:if test="not(key('ids_in_content', $target))">
      <!-- No matching ID, mark the link as broken. -->
      <!-- The IDs of the topicrefs should not be taken into account, are not real targets, but rather references. -->
      
      <xsl:attribute name="broken-link" select="'true'"/>
    </xsl:if>    
  </xsl:template>

</xsl:stylesheet>